-content_for :modal_title do
  -if f.object.new_record?
    Create a new #{f.object.is_biz_process? ? 'business process' : 'system'}
  -else
    Edit #{f.object.is_biz_process? ? 'business process' : 'system'}

-if !f.object.new_record?
  -content_for :modal_delete_path, delete_flow_system_path(f.object)

.row-fluid
  =wrapped_text_field f, :span6, :title, :placeholder => 'Enter title'
  .span6
    .row-fluid
      =wrapped_text_field f, :span6, :slug, :label_name => 'Code (autofill)', :placeholder => 'SYSTEM-XXXX'
      =wrapped_text_field f, :span6, :version, :placeholder => '1.1.1'
.row-fluid
  =wrapped_text_area f, :span6, :description, :class => 'double', :placeholder => 'Enter description here'
  .span6
    .row-fluid
      =wrapped_date_field f, :span6, :start_date, :class => 'date', :label_name => 'Effective Date', :placeholder => 'MM/DD/YYYY'
      =wrapped_date_field f, :span6, :stop_date, :class => 'date', :label_name => 'Stop Date', :placeholder => 'MM/DD/YYYY'
    .row-fluid
      .span6
        =f.label 'Type'
        %select.span12{ :name => 'system[is_biz_process]' }
          %option{ :value => '0', :selected => f.object.is_biz_process || 'selected' } System
          %option{ :value => '1', :selected => f.object.is_biz_process && 'selected' } Business Process
        =error_messages_inline(f, :is_biz_process)
      =wrapped_select f, :span6, :type_id, Option.options_for(:system_type).map { |o| [o.title, o.id] }, :selected => (f.object.respond_to?(:type_id) ? f.object.type_id : nil), :include_blank => true, :label_name => 'Kind'

.row-fluid
  =wrapped_text_field f, :span6, :url, :label_name => 'Direct URL (optional)', :placeholder => 'http://www.example.com/'

%br
