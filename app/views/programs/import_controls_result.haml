.row-fluid
  %hr.hr-widget

.row-fluid
  .span6
    %h4 Compliance Program
    .row-fluid
      .span10.control-group
        %label{:for => "slug"} Program/Regulation
        %input#slug.span12{:disabled => "disabled", :value => @program.slug, :type => "text"}/
        %br/

      .span2
        %label{:for => "version"} Version
        %input#version.span12{:disabled => "disabled", :value => @program.version, :type => "text"}

.row-fluid
  %hr.hr-widget

.row-fluid
  %h4 Data to Import

.row-fluid
  #sampleData.span12.well{:style => 'overflow: scroll'}
    -if @messages.present?
      -@messages.each do |m|
        %p{ :class => 'label-warning' }
          =m
      %br

    -if @errors.any?
      %p.label-warning
        See specific errors below
      %br

    %table.ggrc-table
      %thead
        %tr
          %th Code
          %th Title
          %th Description
          %th Type
          %th Kind
          %th Means
          %th Version
          %th Start
          %th Stop
          %th URL
          %th Systems
          %th Categories
          %th Assertions
          %th Documentation
          %th Verify-Frequency
          %th References
          %th Operator
          %th Key Control
          %th Active
          %th Fraud Related
      %tbody
        -columns = %w(slug title description type kind means version start_date stop_date url systems_display categories_display assertions_display documentation_description verify_frequency references_display operator_display key_control active fraud_related)
        -@controls.each_with_index do |c, i|
          %tr{ :class => (i % 2 == 0 ? :odd : :even) }
            -columns.each do |column_name|
              %td{ :class => ( (@errors[i].present? && @errors[i][column_name].present?) ? 'member-failure' : ((@warnings[i].present? && @warnings[i][column_name].present?) ? 'member-warning' : '' ) ) }
                =c.send(column_name)
                -if @errors[i].present? && @errors[i][column_name].present?
                  .help-inline=@errors[i][column_name].join(', ')
                -if @warnings[i].present? && @warnings[i][column_name].present?
                  .help-inline=@warnings[i][column_name].join(', ')

    Showing 1 to #{@controls.size} of #{@controls.size} entries
    %br/
    #{@creates.size} created, #{@updates.size} updated


.row-fluid
  %hr.hr-widget

.row-fluid
  -if params[:confirm].blank?
    .span9
    .span3
      -if @errors.any? || @messages.any?
        =submit_tag "Correct Errors Before Proceeding", :class => %w(span12 btn btn-large btn-warning btn-primary), :name => 'confirm', :disabled => true
      -else
        =submit_tag "Finish Importing", :class => %w(span12 btn btn-large btn-success btn-primary), :name => 'confirm'
  -else
    .span12
      Import of
      =link_to @program.title, flow_program_path(@program)
      controls is done.

